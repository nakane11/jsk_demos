#!/usr/bin/env roseus
(load "package://fetcheus/fetch-interface.l")
(ros::roseus-add-msgs "jsk_recognition_msgs")
(ros::roseus-add-srvs "std_srvs")

(defun shake-hands ()
  (ros::ros-info "Shake")
  (send *ri* :speak-jp "こんにちは")
  (send *ri* :go-grasp :pos 0.028 :wait t)
  (send *ri* :angle-vector #f(264.826 80.2119 86.975 -63.8445 99.3514 -17.7793 73.0115 -0.005765 -9.34129 40.3897) 500)
  (send *ri* :wait-interpolation)
  (send *ri* :angle-vector #f(264.81 80.1459 86.975 -63.8884 124.444 -17.7353 55.9607 -0.005765 -9.36396 40.3897) 600)
  (send *ri* :wait-interpolation)
  ;; (unix::sleep 3)
  (send *ri* :go-grasp :pos 0.05 :wait t)
  (unix::sleep 3)
  (ros::ros-info "Release"))

(defun hand-pose-to-coords (hand-pose-array)
  (when (> (length (send hand-pose-array :poses)) 0)
    (setq hand-pose (car (send hand-pose-array :poses)))
    (unless (car (send hand-pose :poses))
      (return-from hand-pose-to-coords nil))
    (setq stamp (send hand-pose-array :header :stamp))
    (setq hand-to-camera-coords (send *tfl* :lookup-transform "/gripper_link" (send hand-pose-array :header :frame_id) stamp))
      (when hand-to-camera-coords
        (setq camera-to-hand-coords (ros::tf-pose->coords (car (send hand-pose :poses))))
        (setq hand-to-hand (send hand-to-camera-coords :transform camera-to-hand-coords))
        (return-from hand-pose-to-coords hand-to-hand)
        )))
nil)

(defun hand-pose-cb (msg)
  (setq hand-coords (hand-pose-to-coords msg))
  (when (null hand-coords)
    (return-from hand-pose-cb nil))
  (setq distance (+ (expt (elt (send hand-coords :pos) 0) 2)
                    (expt (elt (send hand-coords :pos) 1) 2)
                    (expt (elt (send hand-coords :pos) 2) 2)))
  (ros::ros-info "distance ~A" distance)
  (when (> 8000 distance))
    (unix::sleep 2)
    (shake-hands)
    ))
    
(defun start-hand-shaking (req)
  (ros::ros-info "Start hand shaking.")
  (ros::subscribe "/hand_pose_estimation_2d/output/pose" jsk_recognition_msgs::HandPoseArray
                #'hand-pose-cb)
  (instance std_srvs::EmptyResponse :init))

(defun stop-hand-shaking (req)
  (ros::ros-info "Stop hand shaking.")
  (ros::unsubscribe "/hand_pose_estimation_2d/output/pose")
  (instance std_srvs::EmptyResponse :init))

(ros::roseus "hand_shaking")

(fetch-init)
(send *ri* :go-grasp :pos 0.05 :wait t)
(send *ri* :angle-vector #f(264.81 80.1459 86.975 -63.8884 124.444 -17.7353 55.9607 -0.005765 -9.36396 40.3897) 600)
(send *ri* :wait-interpolation)

(ros::advertise-service "~start" std_srvs::Empty #'start-hand-shaking)
(ros::advertise-service "~stop" std_srvs::Empty #'stop-hand-shaking)
(ros::spin)
