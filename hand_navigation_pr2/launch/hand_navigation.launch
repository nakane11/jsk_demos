<launch>
  
  <arg name="gui" value="true" />
  <!-- <arg name="input_cloud" value="/kinect_head/depth_registered/points" /> -->
  <!-- <arg name="input_cloud" value="/kinect_head/depth_registered/quater/points" /> -->
  <arg name="input_base_scan" value="/base_scan_filtered" />
  <arg name="input_tilt_scan" value="/tilt_scan_filtered/navigation" />
  <arg name="manager_name" default="hand_navigation_pr2_manager" />
  <arg name="manager" default="/$(arg manager_name)" />

  <node name="$(arg manager_name)"
        pkg="nodelet" type="nodelet"
        args="manager"/>

  <arg name="input_camera_info" value="/kinect_head/rgb/camera_info" />
  <arg name="input_rgb_image" value="/kinect_head/rgb/image_rect_color" />
  <arg name="input_depth_image" value="/kinect_head/depth_registered/hw_registered/image_rect" />
  <arg name="input_pose_array" value="/edgetpu_human_pose_estimator/output/poses" />

  <include file="$(find hand_navigation_pr2)/launch/speech_recognition.launch" >
    <arg name="language" default="ja-JP" />
    <arg name="continuous" default="true" />
  </include>

  <include file="$(find hand_navigation_pr2)/launch/virtual_force_publisher_transformed.launch" >
    <arg name="gui" value="false" />
  </include>
  
  <include file="$(find jsk_perception)/launch/hand_pose_estimation_2d.launch" >
    <arg name="INPUT_IMAGE" value="$(arg input_rgb_image)" />
    <arg name="INPUT_DEPTH_IMAGE" value="$(arg input_depth_image)" />
    <arg name="INPUT_CAMERA_INFO" value="$(arg input_camera_info)" />
    <arg name="with_depth" value="true" />
    <arg name="gui" value="false" />
  </include>

  <node name="people_pose_2d_to_3d"
        pkg="jsk_perception" type="people_pose_2d_to_3d.py"
        output="screen">
    <remap from="~input/pose" to="$(arg input_pose_array)" />
    <remap from="~input/info" to="$(arg input_camera_info)" />
    <remap from="~input/depth" to="$(arg input_depth_image)" />
    <rosparam subst_value="true">
      approximate_sync: true
      queue_size: 100
    </rosparam>
  </node>

  <node name="people_poses_to_poses"
        pkg="jsk_recognition_msgs" type="people_pose_array_to_pose_array.py">
    <remap from="~input" to="people_pose_2d_to_3d/output/pose" />
  </node>

  <node name="get_people_size"
        pkg="hand_navigation_pr2" type="get_people_size.py">
    <remap from="~input" to="people_pose_2d_to_3d/output/pose" />
    <rosparam>
      base_frame_id: base_link
    </rosparam>
  </node>

  <node name="boundingbox_publisher"
        pkg="hand_navigation_pr2" type="boundingbox_publisher.py">
    <rosparam>
      base_frame_id: base_link
      on_ground: true
    </rosparam>
  </node>

  <node name="velocity_filter"
        pkg="hand_navigation_pr2" type="velocity_filter.py">
    <remap from="~input" to="/navigation/cmd_vel" />
    <remap from="~output" to="/navigation/cmd_vel_filtered" />
  </node>

  <node pkg="roseus" type="roseus" name="give_hand_init" output="screen"
        args="$(find hand_navigation_pr2)/euslisp/init.l"  />

  <node pkg="roseus" type="roseus" name="go" output="screen"
        args="$(find hand_navigation_pr2)/euslisp/go.l"  />

  <!-- <group ns="filter_base_laser_scan" > -->
  <!--   <node name="attention_clipper" -->
  <!--         pkg="nodelet" type="nodelet" -->
  <!--         args="load jsk_pcl/AttentionClipper $(arg manager)" > -->
  <!--     <remap from="~input/points" to="$(arg input_base_scan)" /> -->
  <!--     <remap from="~input/box" to="/boundingbox_publisher/output" /> -->
  <!--     <rosparam> -->
  <!--       use_multiple_attention: false -->
  <!--       negative: true -->
  <!--       approximate_sync: true -->
  <!--       queue_size: 1000 -->
  <!--     </rosparam> -->
  <!--   </node> -->

  <!--   <node name="extract_indices" -->
  <!--         pkg="nodelet" type="nodelet" -->
  <!--         args="load jsk_pcl/ExtractIndices $(arg manager)"> -->
  <!--     <remap from="~input" to="$(arg input_base_scan)" /> -->
  <!--     <remap from="~indices" to="attention_clipper/output/point_indices" /> -->
  <!--     <remap from="~output" to="/base_scan_filtered_non_human" /> -->
  <!--     <rosparam> -->
  <!--       keep_organized: true -->
  <!--       approximate_sync: true -->
  <!--       queue_size: 100 -->
  <!--     </rosparam> -->
  <!--   </node> -->

  <!--   <node name="pointcloud_mux" -->
  <!--         pkg="topic_tools" type="mux" -->
  <!--         args="$(arg input_base_scan)_mux $(arg input_base_scan) /base_scan_filtered_non_human" > -->
  <!--     <remap from="mux" to="pointcloud_mux"/> -->
  <!--   </node> -->
  <!-- </group> -->

  <!-- <group ns="filter_tilt_laser_scan" > -->
  <!--   <node name="attention_clipper" -->
  <!--         pkg="nodelet" type="nodelet" -->
  <!--         args="load jsk_pcl/AttentionClipper $(arg manager)" > -->
  <!--     <remap from="~input/points" to="$(arg input_tilt_scan)" /> -->
  <!--     <remap from="~input/box" to="/boundingbox_publisher/output" /> -->
  <!--     <rosparam> -->
  <!--       use_multiple_attention: false -->
  <!--       negative: true -->
  <!--       approximate_sync: true -->
  <!--       queue_size: 1000 -->
  <!--     </rosparam> -->
  <!--   </node> -->

  <!--   <node name="extract_indices" -->
  <!--         pkg="nodelet" type="nodelet" -->
  <!--         args="load jsk_pcl/ExtractIndices $(arg manager)"> -->
  <!--     <remap from="~input" to="$(arg input_tilt_scan)" /> -->
  <!--     <remap from="~indices" to="attention_clipper/output/point_indices" /> -->
  <!--     <remap from="~output" to="/tilt_scan_filtered_non_human" /> -->
  <!--     <rosparam> -->
  <!--       keep_organized: true -->
  <!--       approximate_sync: true -->
  <!--       queue_size: 100 -->
  <!--     </rosparam> -->
  <!--   </node> -->

  <!--   <node name="pointcloud_mux" -->
  <!--         pkg="topic_tools" type="mux" -->
  <!--         args="/tilt_scan_filtered_mux $(arg input_tilt_scan) /tilt_scan_filtered_non_human" > -->
  <!--     <remap from="mux" to="pointcloud_mux"/> -->
  <!--   </node> -->
  <!-- </group> -->

  <group if="$(arg gui)" >
    <node name="$(anon rviz)"
          pkg="rviz" type="rviz"
          args="-d $(find hand_navigation_pr2)/launch/config/human_filter.rviz" >
    </node>
  </group>
</launch>
